<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Drafts Previewer]]></title>
  <link href="http://vis-kid.github.io/octopress_drafts_previewer/atom.xml" rel="self"/>
  <link href="http://vis-kid.github.io/octopress_drafts_previewer/"/>
  <updated>2015-10-01T17:55:21+02:00</updated>
  <id>http://vis-kid.github.io/octopress_drafts_previewer/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bourbon Neat-Variables]]></title>
    <link href="http://vis-kid.github.io/octopress_drafts_previewer/blog/2015/10/01/Neat-Variables/"/>
    <updated>2015-10-01T05:29:10+02:00</updated>
    <id>http://vis-kid.github.io/octopress_drafts_previewer/blog/2015/10/01/Neat-Variables</id>
    <content type="html"><![CDATA[<p><img src="http://vis-kid.github.io/octopress_drafts_previewer/images/Neat_01/Neat-pour.jpg"></p>

<p><a href="http://neat.bourbon.io/"><img src="http://vis-kid.github.io/octopress_drafts_previewer/images/bourbon-neat/Bourbon-Neat-Logo.png" width="250" height="450"></a></p>

<p>In this last section about Bourbon Neat we’ll look at the various “built in” Sass variables you have at your disposal. It’s gonna be a short ride but knowing how to tweak your grids is important.</p>

<h4>Variables</h4>

<ul>
<li>default-layout-direction</li>
<li>visual-grid-opacity</li>
<li>border-box-sizing</li>
<li>visual-grid-index</li>
<li>disable-warnings</li>
<li>visual-grid-color</li>
<li>default-feature</li>
<li>grid-columns</li>
<li>max-width</li>
<li>visual-grid</li>
<li>column</li>
<li>gutter</li>
</ul>


<p>Your variables are best placed in one central place like in your <strong>_grid-settings</strong> partial. In any case, to avoid any surprises, make sure to not forget to import these variables before you import Neat.</p>

<p>Sass:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="k">@import</span> <span class="s">&quot;bourbon/bourbon&quot;</span>
</span><span class='line'><span class="k">@import</span> <span class="s">&quot;grid-settings&quot;</span>
</span><span class='line'><span class="k">@import</span> <span class="s">&quot;neat/neat&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Visualizing your grid</h2>

<p>Let’s start with something that you should be using from day one. Neat can show you a visual grid that makes it easier to visualize your designs and spot opportunities for experimentation.</p>

<p>I’m definitely in the camp of people who advocate designing in the browser as soon as possible. No doubt, sometimes it is important so spend a little extra time in Sketch or whatever, but aiming to bridge the two faster is a reasonable ambition. Seeing the grid skelleton for your layout in the browser makes it a whole lot easier to leave other graphical design tools behind.</p>

<ul>
<li><h3>visual-grid</h3></li>
</ul>


<p>By default, Neat sets <strong>visual-grid</strong> to <strong>false</strong>. Just jump into <strong>_grid-settings</strong> and change it to <strong>true</strong>.</p>

<p>Sass:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="na">$visual-grid</span><span class="o">:</span> <span class="n-Pseudo">true</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Screenshot:</h4>

<p><img src="http://vis-kid.github.io/octopress_drafts_previewer/images/bourbon-variables/visual-grid-empty.png"></p>

<p><a href="http://codepen.io/vis-kid/pen/PPWLQK">codepen example</a></p>

<p>The color you’ll see will be a bit different—I already tweaked that abit—but it will show you the number of columns you have set via <strong>$grid-columns</strong>. In this case I kept the default which is 12 columns.</p>

<ul>
<li><h3>visual-grid-index</h3></li>
</ul>


<p>If you already have some content which spans the full width on the page you might be surprised to see no effect. In case that happens, remember that the <strong>visual-grid-index</strong> is set to <strong>back</strong> by default.</p>

<p>Sass:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="na">$visual-grid-index</span><span class="o">:</span> <span class="n">back</span> <span class="nv">!default</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Screenshot:</h4>

<p><img src="http://vis-kid.github.io/octopress_drafts_previewer/images/bourbon-variables/visual-grid-index-back.png"></p>

<p><a href="http://codepen.io/vis-kid/pen/MaJRpY">codepen example</a></p>

<p>If you want to see the visual grid displayed in front of the content on the page just make this little change:</p>

<p>Sass:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="na">$visual-grid-index</span><span class="o">:</span> <span class="n">front</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Screenshot:</h4>

<p><img src="http://vis-kid.github.io/octopress_drafts_previewer/images/bourbon-variables/visual-grid-index-front.png"></p>

<p><a href="http://codepen.io/vis-kid/pen/RWKOyB">codepen example</a></p>

<p>A 12 column grid offers you a lot of flexiblity to combine sections of various length neatly into it. It’s a solid choice for beginners as well as advanced designers.</p>

<ul>
<li><h3>visual-grid-color</h3></li>
</ul>


<p>If you’re unhappy with the default color you can change that of course. Of course it’s a good idea to choose a color that has good contrast compared to your design. I like using plain old <strong>tomato</strong>—although for the examples here I decided differently since I already used it to highlight the containers.</p>

<p>Sass:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="na">$visual-grid-color</span><span class="o">:</span> <span class="nb">black</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Screenshot:</h4>

<p><img src="http://vis-kid.github.io/octopress_drafts_previewer/images/bourbon-variables/visual-grid-color.png"></p>

<p><a href="http://codepen.io/vis-kid/pen/PPWgXL">codepen example</a></p>

<ul>
<li><h3>visual-grid-opacity</h3></li>
</ul>


<p>If you’re unhappy with the default opacity of 40% you can overrule that too of course. I believe <strong>0.4</strong> is a good choice for a default but every project is different of course. Although its not the best use of this variable, let’s see how 100% looks in the same example.</p>

<p>Sass:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sass'><span class='line'><span class="na">$visual-grid-opacity</span><span class="o">:</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Screenshot:</h4>

<p><img src="http://vis-kid.github.io/octopress_drafts_previewer/images/bourbon-variables/visual-grid-opacity-100.png"></p>

<p><a href="http://codepen.io/vis-kid/pen/pjRmPe">codepen example</a></p>
]]></content>
  </entry>
  
</feed>
